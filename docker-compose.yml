services:
  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=restaurant_db
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./restaurants.csv:/code/restaurants.csv:ro
      - ./app:/code/app:ro
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  test:
    build: .
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SERVER=test-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=test_db
      - REDIS_URL=redis://test-redis:6379
      - PYTHONPATH=/code
    volumes:
      - ./app:/code/app
      - ./tests:/code/tests
      - ./restaurants.csv:/code/restaurants.csv:ro
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_started
    command: pytest -v

  test-db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-redis:
    image: redis:7

  db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=restaurant_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d restaurant_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  postgres_data: 